<resources>
    <string name="app_name">SplitScreenDemo</string>
    <string name="context">设置你的测试设备
如果你有一台运行Android N的设备，它是默认支持分屏模式的。

如果你的App不是用Android N Preview SDK打包的
如果你的App是用低于Android N Preview SDK打包的，且你的Activity支持横竖屏切换。那么当用户在尝试使用分屏模式时，系统会强制将你的App进入分屏模式。（我在第一篇博客里提到过这个，Android N Preview的介绍视频中，很多Google家的App都可以进入分屏模式，但是打开它们的xml一看，其实targetSDKVersion = 23）

因此，如果你的App/Activity支持横竖屏切换，那么你应该尝试一下让自己的App分屏，看看当系统强制改变你的App尺寸时，用户是否还可以接受这种体验。如果你的App/Activity不支持横竖屏切换，那么你可以确认一下，看看当尝试进入分屏时，你的App是不是仍然能够保持全屏模式。

如果你给App设置了支持分屏模式
如果你使用了Android N Preview SDK来开发自己的App，那么应该按照下面的要点检查一下自己的App。

启动App，长按系统导航栏右下角的小方块（Google官方把这个叫做Overview Button），确保你的App可以进入分屏模式，且尺寸改变后仍然能正常工作。
启动任务管理器（即单击右下角的小方块），然后长按你App的标题栏，将它拖动到屏幕上的高亮区域。确保你的App可以进入分屏模式，且尺寸改变后仍然能正常工作。
这两点在上一篇博客中介绍过，让自己的App进入分屏模式有三种方法。第三种方法，就是在打开自己的App时，用手指从右下角的小方块向上滑动，这样也可以使得正在浏览的App进入分屏模式。这种方法目前属于实验性功能，正式版不一定保留。

当你的App进入分屏后，通过拖动两个App中间的分栏上面的小白线，从而改变App的尺寸，观察App中各个UI元素是否正常显示。
如果你给自己的App/Activity设置了最小尺寸，可以尝试在改变App尺寸时，低于这个最小尺寸，观察App是不是会回到设定好的最小尺寸。
在进行上面几项测试时，请同时验证自己的App功能和性能是否正常，并注意一下自己的App在更新UI时是否花费了太长的时间。
这几项测试，其实主要强调的是，我们的App可以顺利的进入/退出分屏模式，且改变App的尺寸时，UI依然可以也非常顺滑。

这里我想多说一句，如果进入了分屏模式，要注意下App弹出的对话框，因为屏幕被两个App分成两块之后，对话框也是可以弹出两个的。这时对话框上的UI元素可能就会变得比较小了，如果我们的代码是写死的大小，例如对话框是一个WebView，就需要特别注意了，搞不好显示出来就缺了一块了，这里需要我们做好适配。</string>
</resources>
